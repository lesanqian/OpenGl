#include <GL/glut.h>
#include <iostream>
#include <cmath>
using namespace std;

void init()
{
	glClearColor(1.0, 1.0, 1.0, 1.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(-100.0, 100.0, -100.0, 100.0);
}

void eightpoint(int x,int y) 
{
	glVertex2i(x, y); glVertex2i(y, x);
	glVertex2i(-x, y);glVertex2i(y, -x);
	glVertex2i(x, -y);glVertex2i(-y, x);
	glVertex2i(-x, -y);glVertex2i(-y, -x);
}

void display()
{
	int x, y, delta, d1, d2, dir,r=50;
	delta = 2 * (1 - r);x = 0; y = r; 
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0, 0.0, 0.0);
	glLineWidth(1);
	glBegin(GL_POINTS);
	eightpoint(x, y);//显示圆弧上的八个对称点
	while (y >= 0) {
		eightpoint(x, y);
		if (delta < 0) {
			d1 = 2 * (delta + y) - 1;
			if (d1 <= 0) dir = 1;
			else       dir = 2;
		}
		else if (delta > 0) {
			d2 = 2 * (delta - x) - 1;
			if (d2 <= 0) dir = 2;
			else             dir = 3;
		}
		else       dir = 2;
		switch (dir)
		{
		case 1:
			x++;
			delta += 2 * x + 1;
			break;
		case 2:
			x++; y--;
			delta += 2 * (x - y + 1) + 1;
			break;
		case 3:
			y--;
			delta += -2 * y + 1;
			break;
		}
	}
	glEnd();
	glFlush();
}

int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowPosition(300, 200);
	glutInitWindowSize(300, 300);
	glutCreateWindow("Bresenham 画圆");
	init();
	//glOrtho(-17.0, 17.0, -18.0, 17.0, -1.0, 1.0);
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}
