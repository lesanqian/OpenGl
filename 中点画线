#include <GL/glut.h>
#include <iostream>
#include <cmath>
using namespace std;

void init()
{
	glClearColor(1.0, 1.0, 1.0, 1.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 200.0, 0.0, 150.0);
}

void display(void)
{
	int x0 = 10, y0 = 0, x1 = 100, y1 = 40;
	int a = y0 - y1, b = x1 - x0;
	int d = 2 * a + b,d1=2*a,d2=2*(a+b);
	int x = x0, y = y0;

	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0, 0.0, 0.0);
	glPointSize(5.0);
	glBegin(GL_POINTS);
	while (x <= x1) {
		glVertex2i(x, y);
		if (d < 0) {
			 d += d2;
			y++;
		}
		else {
			d += d1;
		}
		x++;
	}


	glEnd();

	glFlush();
}

int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowPosition(300, 200);
	glutInitWindowSize(200, 200);
	glutCreateWindow("Bresenham Draw Line");
	init();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}
